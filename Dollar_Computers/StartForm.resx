<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIo
        LTkwKCo2KyIjMkQyNjs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCACvAK8DASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2aiiigAooooAKKKKACiiigAooooAKKQnFAII4NAC0UUUAFFFF
        ABRRRQAUUUUAFFFFABRRRQAUUUUAFFITgZNN86P/AJ6J/wB9CgB9JTPPi/56p/30KPPi/wCeqf8AfQoA
        eKjluI4f9YwH86y/EPiSz8P6Y13cOG52oinJdj2H5V45rPjnV9Xldlna0hOSqwNgge7Dkn8h7VhVrcmi
        3MKtXl0W56L488VTaPpdvLYIjM84RvNUlcbWPYj0FWvBPiaTV9AjuL1Y0kMjr8ikDAPuSa8PkkeRi7sz
        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
        UUAFFFFABRRRQB//2Q==
</value>
  </data>
</root>